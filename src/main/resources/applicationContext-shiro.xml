<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--  配置缓存管理器  -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!--  指定cache的配置文件  -->
        <!--TODO ehcache-shiro.xml 文件加载有问题 需要处理-->
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean>

    <bean id="secureRemoteInvocationExecutor" class="org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--  配置进行授权和认证的 Realm，要新增一个java类来实现，下面会有，class=包名.类名，init-methood是初始化的方法  -->
    <bean id="myRealm" class="com.fuyd.web.shiro.MyRealm" init-method="setCredentialMatcher"></bean>

    <!--  配置 Shiro 的 SecurityManager Bean.  -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="realm" ref="myRealm"/>
    </bean>

    <!--  配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法.  -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

    <!--  配置 ShiroFilter bean: 该 bean 的 id 必须和 web.xml 文件中配置的 shiro filter 的 name 一致  -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--  装配 securityManager  -->
        <property name="securityManager" ref="securityManager"/>
        <!--  配置登陆页面  -->
        <property name="loginUrl" value="/index.jsp"/>
        <!--  登陆成功后的一面  -->
        <property name="successUrl" value="/view/shiro-success.jsp"/>
        <property name="unauthorizedUrl" value="/view/shiro-unauthorized.jsp"/>
        <!--  具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截.  -->
        <property name="filterChainDefinitions">
            <value>
                <!--  anno，任何人都可以访问；authc：必须是登录之后才能进行访问，
                不包括remember me；user：登录用户才可以访问，包含remember me；perms：指定过滤规则，这个一般是扩展使用，不会使用原生的  -->
                <!--  配置登出: 使用 logout 过滤器  -->
                <!--/shiro-logout = logout
                /shiro-* = anon
                /user.jsp = roles[user]
                /admin.jsp = roles[admin]
                /** = authc-->
                /view/shiro-success = anon
                /view/shiro-login = anon
                /user*/ = anon
            </value>
        </property>
    </bean>
</beans>